* Tutorial de GIT
....###....########.########.########.##.....##
...##.##........##..##.......##.......###...###
..##...##......##...##.......##.......####.####
.##.....##....##....######...######...##.###.##
.#########...##.....##.......##.......##.....##
.##.....##..##......##.......##.......##.....##
.##.....##.########.########.########.##.....##

* Clonar un repositorio

** Se necesita una URL, la copia del respositorio

*** Comando: git clone https://github.com/Mequetlefe/tutorial_git_1

* Mostrar el Status del GIT

** git status

* Agregar un archivo

** Dentro de la carpeta donde se encuentra el git, comentar:

*** git add <archivo>

**** Para agregar todos archivos se usa el *, cómo en bash

***** git add *

* Commit en git

** git commit -m "mi comentario del archivo" 

* Subir un arhivo

** git push

* Descargar las versiones más actualizadas

** git pull

* Mostrar todos los comandos de git

** git

* INICIALIZAR UN REPOSITORIO (desde un proyecto)

** git init

*** Se generan archivos .git, 

* Dejar de usar un repositorio

** Se borra la carpeta .git (rm -rf /.git)

* Ignorar arcchivos de configuracion (.gitignore)

** Se crea un archivo .gitignore (touch .gitignore)

*** en el archivo plano de texto se agregan simplemente por columnas los archivos a ignorar

*** .DS_project

*** *.pyc (se pueden usar wildcards)

* Borrar archivos del stagin area (despues del add)

** git reset 'name.extention'

* Ver informacion del repositorio remoto

** git remote -v

** git branch -a (muestra todas las ramas del repositorio, locales y remotas)

* Mostrar los cambios realizados al archivo

** git diff

* 
