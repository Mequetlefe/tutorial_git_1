* Tutorial de GIT
....###....########.########.########.##.....##
...##.##........##..##.......##.......###...###
..##...##......##...##.......##.......####.####
.##.....##....##....######...######...##.###.##
.#########...##.....##.......##.......##.....##
.##.....##..##......##.......##.......##.....##
.##.....##.########.########.########.##.....##

* Clonar un repositorio

** Se necesita una URL, la copia del respositorio

*** Comando: git clone https://github.com/Mequetlefe/tutorial_git_1

* Mostrar el Status del GIT

** git status

* Agregar un archivo

** Dentro de la carpeta donde se encuentra el git, comentar:

*** git add <archivo>

**** Para agregar todos archivos se usa el *, cómo en bash

***** git add *

* Commit en git

** git commit -m "mi comentario del archivo" 

* Subir un arhivo

** git push

* Descargar las versiones más actualizadas

** git pull

* Mostrar todos los comandos de git

** git

* INICIALIZAR UN REPOSITORIO (desde un proyecto)

** git init

*** Se generan archivos .git, 

* Dejar de usar un repositorio

** Se borra la carpeta .git (rm -rf /.git)

* Ignorar arcchivos de configuracion (.gitignore)

** Se crea un archivo .gitignore (touch .gitignore)

*** en el archivo plano de texto se agregan simplemente por columnas los archivos a ignorar

*** .DS_project

*** *.pyc (se pueden usar wildcards)

* Borrar archivos del stagin area (despues del add)

** git reset 'name.extention'

* Ver informacion del repositorio remoto

** git remote -v

** git branch -a (muestra todas las ramas del repositorio, locales y remotas)

* Mostrar los cambios realizados al archivo

** git diff

* Mostrar información sobre el repositorio remoto

** git remote -v

* Mostrar todos los branches en el repositorio (tanto remotos como locales) 

** git branch -a

* Crear una BRANCH para una caracteristica en especial

** git branch 'nombre de la branch'

* Seleccionar una BRANCH para trabajar

** git checkout 'nombre de la branch'

* Push a Branch a una forma remota

** git push -u origin 'nombre de la branch'
   
* Diferencias entre branch locales y remotas

** las branch remotas mencionan:

*** remotes/origin/

** las branchas locales omiten esa ruta
* Fusionar una  branch con Master

** se siguen los siguientes pasos:
1) git checkout master (seleccionar la branch master) 
2) git pull origin master
3) nos muestra las branch que se han fusionado hasta ahora
   1) git branch --merged
4) git merge 'nombre de la branch'
5) git push origin master

* Borar una branch

1) git branch --merged
2) git branch -d 'nombr de la branch' (se borró localmente) 
3) git branch -a
4) git push origin --delete 'nombre de la branch'  (se borró remotamente)

* Revertir el último cambio en el branch (incluso master)
1) before any push
2) git checkout 'nombre_archivo.org'
3) git diff
4) git status
   1) Se comprueba que no hubo cambio
5) en emacs, C-x s (y selecconionar 'r' de reload from disk)
<<<<<<< HEAD
* Cambiar el último commit (solo cuando SOMOS los únicos usandolo) (problemas con el git) 
1) git commit --amend -m "nuevo commit"

* Corregir la dirección de una branch 
1) Se usa cherry pick
   1) el cual crea un commit en base a uno previo
   2) Tiene que haber una diferencia de commits (uno es más actualizado que el otro) 
2) 

* 


=======
>>>>>>> 4520fe6b48ac9d08cf6fa1ac51988958c58f0e7c

